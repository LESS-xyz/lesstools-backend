version: "3.8"

services:
  db:
    image: postgres
    environment:
      POSTGRES_DB:
      POSTGRES_USER:
      POSTGRES_PASSWORD:
    volumes:
      - ./.docker/postgres-data:/var/lib/postgresql/data
    networks:
      - main
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${DJANGO_PORT}:8000"
    depends_on:
      - db
      - rabbitmq
    env_file:
      - .env
    volumes:
      - ./lesstools/:/code/lesstools/
      - ./static/:/code/static/
    networks:
      - main
  dramatiq:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - rabbitmq
    restart: unless-stopped
    env_file:
      - .env
    command: poetry run python manage.py rundramatiq
    networks:
      - main
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - rabbitmq
    restart: unless-stopped
    env_file:
      - .env
    command: poetry run python manage.py run_scheduler
    networks:
      - main
  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    env_file:
      - .env
    networks:
      - main

networks:
  main: