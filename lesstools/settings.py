"""
Django settings for lesstools_backend project.

Generated by 'django-admin startproject' using Django 2.2.16.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from lesstools.logging_settings import LOGGING
from emoji import emojize

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'pz942#q+@yif&n#%o04z#_%$))f%ebp&=7)dvb)xn6(e%usb04'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', '144.76.201.50', 'tools.less.xyz']

# LessTools platform settings
FAVOURITE_PAIRS_LIMIT = 10


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'drf_yasg',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'rest_auth',
    'django_dramatiq',

    'lesstools.accounts',
    'lesstools.networks',
    'lesstools.rates',
    'lesstools.analytics',
    'lesstools.advertisement',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'lesstools.urls'
SITE_ID = 1

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'lesstools.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'USER': os.environ.get('POSTGRES_USER'),
        'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),
        'NAME': os.environ.get('POSTGRES_DB'),
        'HOST': os.environ.get('DB_HOST'),
        'PORT': int(os.environ.get('DB_PORT', 0)),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators
AUTH_USER_MODEL = 'accounts.AdvUser'

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),
}

DRAMATIQ_BROKER = {
    "BROKER": "dramatiq.brokers.rabbitmq.RabbitmqBroker",
    "OPTIONS": {
        "url": "amqp://lesstools:lesstools@rabbitmq:5672/lesstools",
    },
    "MIDDLEWARE": [
        "dramatiq.middleware.Prometheus",
        "dramatiq.middleware.AgeLimit",
        "dramatiq.middleware.TimeLimit",
        "dramatiq.middleware.Callbacks",
        "dramatiq.middleware.Retries",
        "django_dramatiq.middleware.DbConnectionsMiddleware",
        "django_dramatiq.middleware.AdminMiddleware",
    ]
}
# Defines which database should be used to persist Task objects when the
# AdminMiddleware is enabled.  The default value is "default".
DRAMATIQ_TASKS_DATABASE = "default"

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/django-static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ORIGIN_ALLOW_ALL = True

USE_X_FORWARDED_HOST = True

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')


MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
)

ADMIN_MEDIA_PREFIX = '/static/admin/'


try:
    from lesstools.settings_local import *
except ImportError:
    print('Cannot import local settings')

SWAP = {
        'apeswap': 'https://api.thegraph.com/subgraphs/name/rock-n-block/apeswap-lesstools',
        'babyswap': 'https://api.thegraph.com/subgraphs/name/rock-n-block/babyswap-lesstools',
        'biswap': 'https://api.thegraph.com/subgraphs/name/rock-n-block/biswap-lesstools',
        'honeyswap': 'https://api.thegraph.com/subgraphs/name/rock-n-block/honeyswap-lesstools',
        'joetrader': 'https://api.thegraph.com/subgraphs/name/rock-n-block/joe-trader-lesstools',
        'mdex_bsc': 'https://api.thegraph.com/subgraphs/name/rock-n-block/mdex-bsc-lesstools',
        'pancakeswap': 'https://api.thegraph.com/subgraphs/name/rock-n-block/lesstools-pancake',
        'pangolinswap': 'https://api.thegraph.com/subgraphs/name/rock-n-block/pangolin-lesstools',
        'quickswap': 'https://api.thegraph.com/subgraphs/name/rock-n-block/lesstools-quickswap',
        'spiritswap': 'https://api.thegraph.com/subgraphs/name/rock-n-block/spiritswap-lesstools',
        'spookyswap': 'https://api.thegraph.com/subgraphs/name/rock-n-block/spookyswap-lesstools',
        'uniswap': 'https://api.thegraph.com/subgraphs/name/rock-n-block/lesstools-uniswap-v2',
        'BSC': 'https://api.thegraph.com/subgraphs/name/rock-n-block/lesstools-sushiswap-bsc',
        'avalanche': 'https://api.thegraph.com/subgraphs/name/rock-n-block/lesstools-sushiswap-avalanche',
        'xdai': 'https://api.thegraph.com/subgraphs/name/rock-n-block/lesstools-sushiswap-xdai',
        'fantom': 'https://api.thegraph.com/subgraphs/name/rock-n-block/lesstools-sushiswap-fantom',
        'matic': 'https://api.thegraph.com/subgraphs/name/rock-n-block/lesstools-sushiswap-matic',
        'mainnet': 'https://api.thegraph.com/subgraphs/name/rock-n-block/lesstools-sushiswap'
    }
NETWORKS = {
        'apeswap': 'bsc',
        'babyswap': 'bsc',
        'biswap': 'bsc',
        'honeyswap': 'xdai',
        'joetrader': 'avalanche',
        'mdex_bsc': 'bsc',
        'pancakeswap': 'bsc',
        'pangolinswap': 'avalanche',
        'quickswap': 'matic',
        'spiritswap': 'fantom',
        'spookyswap': 'fantom',
        'uniswap': 'mainnet',
        'BSC': 'bsc',
        'avalanche': 'avalanche',
        'xdai': 'xdai',
        'fantom': 'fantom',
        'matic': 'matic',
        'mainnet': 'mainnet'
    }
BOT_TOKEN = '2068582159:AAESyHH-yOXd0TDKj1ZtyQxAzLmJFw_LUws'
TELEGRAM_CHAT_ID_2 = '@lesstoolspairsBOT'
SUSHISWAP = ['BSC', 'avalanche', 'xdai', 'fantom', 'matic', 'mainnet']
Unicorn = emojize(':unicorn:', use_aliases=True)
Sushi = emojize(':sushi:', use_aliases=True)
Pancakes = emojize(':pancakes:', use_aliases=True)
Farmer = emojize(':farmer:', use_aliases=True)
Baby_bottle = emojize(':baby_bottle:', use_aliases=True)
Monkey_face = emojize(':monkey_face:', use_aliases=True)
Dragon = emojize(':dragon:', use_aliases=True)
Hedgehog = emojize(':hedgehog:', use_aliases=True)
Bee = emojize(':bee:', use_aliases=True)
Ghost = emojize(':ghost:', use_aliases=True)
Alien = emojize(':alien:', use_aliases=True)
Dove = emojize(':dove:', use_aliases=True)
Watermelon = emojize(':watermelon:', use_aliases=True)
POOLS_EMOJI = {
    'uniswap' : Unicorn,
    'sushi' : Sushi,
    'pancakeswap' : Pancakes,
    'joetrader' : Farmer,
    'babyswap' : Baby_bottle,
    'apeswap' : Monkey_face,
    'quickswap' : Dragon,
    'pangolinswap' : Hedgehog,
    'honeyswap' : Bee,
    'spiritswap' : Ghost,
    'spookyswap': Alien,
    'biswap' : Dove,
    'mdex' : Watermelon,
    'fantom': Ghost,
    'mainnet': Unicorn,
    'avalanche': Unicorn,
    'xdai': Unicorn,
    'mdex_bsc' : Sushi,
    'BSC' : Unicorn,
}

EXECLUDE_LIST = ['0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',
  '0x6b175474e89094c44da98b954eedeac495271d0f',
  '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',
  '0xdac17f958d2ee523a2206206994597c13d831ec7',
  '0x0000000000085d4780b73119b644ae5ecd22b376',
  '0x5d3a536e4d6dbd6114cc1ead35777bab948e3643',
  '0x39aa39c021dfbae8fac545936693ac917d5e7563',
  '0x86fadb80d8d2cff3c3680819e4da99c10232ba0f',
  '0x57ab1ec28d129707052df4df418d58a2d46d5f51',
  '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2',
  '0xc00e94cb662c3520282e6f5717214004a7f26888',
  '0x514910771af9ca656af840dff83e8264ecf986ca',
  '0x960b236a07cf122663c4303350609a66a7b288c0',
  '0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f',
  '0x0bc529c00c6401aef6d220be8c6ea1667f6ad93e',
  '0xdf5e0e81dff6faf3a7e52ba697820c5e32d806a8',
  '0x853d955acef822db058eb8505911ed77f175b99e',
  '0xa47c8bf37f92abed4a126bda807a7b7498661acd',
  '0x1f9840a85d5af5bf1d1762f925bdaddc4201f984',
  '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',
  '0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7',
  '0xe91d153e0b41518a2ce8dd3d7944fa863463a97d',
]
